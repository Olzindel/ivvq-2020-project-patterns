type Order {
    id: ID!
    createdAt: String!
    orderStatus: OrderStatus!
    OrderItems: [OrderItem!]!
    User: User!
}

input OrderInput {
    id: ID!
    createdAt: String
    orderStatus: OrderStatus
    OrderItems: [OrderItemInput!]
    User: UserInput
}

enum OrderStatus {
    BASKET
    PAID
    ABORTED
}

extend type Query {
    orders(count: Int!):[Order]
    order(orderId: ID!):Order
}

extend type Mutation {
    updateOrder(input:OrderInput):Order
    createOrder(orderStatus:OrderStatus!,orderItemIds:[ID!]!, userId:ID! ):Order
    deleteOrder(orderId:ID!):ID
}