type User {
    id: ID!
    username: String
    password: String
    firstName: String!
    lastName: String!
    email: String!
    gender: String
    street:String
    postalCode:String
    city:String
    role:Role!
    orders: [Order!]
}

input UserInput {
    username: String
    password: String
    firstName: String
    lastName: String
    email: String
    gender: String
    street:String
    postalCode:String
    city:String
    role:Role
    orders: [ID!]
}

enum Role {
    USER
    MERCHANT
}

extend type Query {
    users(count: Int!):[User]
    user(userId: ID!):User
    userFromToken(token: String!):User
}

extend type Mutation {
    updateUser(userId:ID!, input:UserInput!):User
    createUser(input:UserInput):User
    deleteUser(userId:ID!):ID
}